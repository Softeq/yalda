#!/usr/bin/env bash

arch=x86_64
gdb_params="--tui -nx -iex set auto-load safe-path /"
gdb_script="kernel_gdb_script"
vmlinux="linux/vmlinux"

function print_help {
	echo "---------------------------"
	echo -e "available parameters:"
	echo -e "-a | --arch <arch>\tchoose architecture"
	echo -e "-k | --kernel <vmlimux>\tspecify vmlinux file (linux/vmlinux is default)"
	echo -e "-s | --script <script>\tspecify gdb script file (kernel_gdb_script is default)"
	echo -e "-p | --param <param>\tappend parameter string for gdb run"
	echo -e "-h | --help\t\tprint help message"
	echo
}

# parse command line arguments
while [[ "$#" -gt 0 ]]; do
		case $1 in
			-a|--arch) arch="$2"; shift ;;
			-k|--kernel) vmlinux="$2"; shift ;;
			-s|--script) gdb_script="$2"; shift ;;
			-p|--param) gdb_params="${gdb_params} $2"; shift ;;
			-h|--help) print_help; exit 0 ;;
			*) echo "Unknown parameter passed: $1"; print_help; exit 1 ;;
		esac
		shift
done

if [ "${arch}" == "x86_64" ]; then
	gdb_exe="gdb"
elif [ "${arch}" == "arm" ]; then
	gdb_exe="gdb-multiarch"
else
	echo "Unsupported architecture "$arch""
	exit 1
fi

${gdb_exe} ${gdb_params} -x "${gdb_script}" "${vmlinux}"
