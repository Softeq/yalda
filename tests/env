#!/usr/bin/env bash

if [ ! -f "${TEST_CONFIG_FILE}" ]; then
    echo "No ${TEST_CONFIG_FILE} file found"
    exit 1
fi

export COMPONENTS_DIR="${ROOT_DIR}/components"
export SCRIPTS_DIR="${ROOT_DIR}/scripts"
export CONFIG_DIR="${ROOT_DIR}/config"
export PATCHES_DIR="${ROOT_DIR}/patches"

export YALDA_OUT="${TEST_CONFIG_RESULT_DIR}/out"

export YALDA_OUT_KERNEL="${YALDA_OUT}/kernel"
export YALDA_OUT_BUSYBOX="${YALDA_OUT}/busybox"
export YALDA_OUT_WHISTLE="${YALDA_OUT}/whistle"
export YALDA_OUT_ROOTFS="${YALDA_OUT}/rootfs"

mkdir -pv "${YALDA_OUT}"

source "${SCRIPTS_DIR}/utils"
source "${CONFIG_DIR}/default"
source "${TEST_CONFIG_FILE}"

DFLT_YES="y"
DFLT_NO="n"

#
# Common parameters
#
set_param YALDA_DEBUG
set_param_choice ARCH CONFIG_YALDA_ARCH_ARM arm
if [ "${CONFIG_YALDA_ARCH_X86}" == "y" ]; then
    if [ "${CONFIG_YALDA_64BIT}" == "y" ]; then
        ARCH=x86_64
    else
        ARCH=x86
    fi
fi

set_param CROSS_COMPILE
if [ "${CROSS_COMPILE}" == "" ]; then
    source "${CONFIG_DIR}/arch/${ARCH}/toolchain.mk"
fi

set_param KERNEL_DIR
set_param BUSYBOX_DIR
set_param WHISTLE_DIR
set_param ROOTFS_DIR
set_param WHISTLE_BUILD

KERNEL_DIR="$(_realpath ${KERNEL_DIR})"
BUSYBOX_DIR="$(_realpath ${BUSYBOX_DIR})"
WHISTLE_DIR="$(_realpath ${WHISTLE_DIR})"
ROOTFS_DIR="$(_realpath ${ROOTFS_DIR})"

if [ ! -d "${WHISTLE_DIR}" ] && [ "${WHISTLE_BUILD}" == "y" ]; then
    echo "WARNING! Directory does not exist, propably you need to fetch submodule:"
    echo "git fetch --recurse-submodules"
    exit 1
fi

component_scripts_dir="${SCRIPTS_DIR}/${component}"
component_env_file="${component_scripts_dir}/env"

set_param RUN_HOST_KERNEL
set_param RUN_KERNEL_IMAGE_PATH
set_param RUN_KERNEL_VMLINUX_PATH
set_param RUN_INITRD_PATH
set_param RUN_KERNEL_CMDLINE

export RUN_KERNEL_IMAGE_PATH="$(_realpath ${RUN_KERNEL_IMAGE_PATH})"
export RUN_KERNEL_VMLINUX_PATH="$(_realpath ${RUN_KERNEL_VMLINUX_PATH})"
export RUN_INITRD_PATH="$(_realpath ${RUN_INITRD_PATH})"
source "${component_env_file}"
source ${component_scripts_dir}/${action}
